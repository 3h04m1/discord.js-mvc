import{_ as e,o as a,c as n,a as o}from"./app-ab3f265b.js";const s={},t=o(`<h1 id="cli" tabindex="-1"><a class="header-anchor" href="#cli" aria-hidden="true">#</a> CLI</h1><p>Discord.js MVC comes with a powerfull CLI, with it you can create new plugins, controllers, middlewares, and even apps.</p><h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation" aria-hidden="true">#</a> Installation</h2><p>To install the CLI, you need to install the package globally, you can do that by running the following command:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-g</span> @discordjs-mvc/cli
<span class="token comment"># or</span>
<span class="token function">yarn</span> global <span class="token function">add</span> @discordjs-mvc/cli
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Now you can use the CLI by running the following command:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>djs-mvc <span class="token operator">&lt;</span>command<span class="token operator">&gt;</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><p>Currently the CLI has 2 commands, <code>new</code> and <code>generate</code>.</p><h3 id="new-alias-n" tabindex="-1"><a class="header-anchor" href="#new-alias-n" aria-hidden="true">#</a> New (alias: n)</h3><p>The <code>new</code> command is used to create a new Discord.js MVC bot, you can use it by running the following command:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>djs-mvc new <span class="token operator">&lt;</span>name<span class="token operator">&gt;</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span>
<span class="token comment"># or using the alias</span>
djs-mvc n <span class="token operator">&lt;</span>name<span class="token operator">&gt;</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <code>name</code> argument is the name of the bot, and the <code>options</code> are the options for the project, the available options are:</p><ul><li><code>--language</code> or <code>-l</code>: The language of the bot, the available languages are: <ul><li><code>javascript</code>: JavaScript</li><li><code>typescript</code>: TypeScript</li></ul></li><li><code>--package-manager</code> or <code>-p</code>: The package manager to use, the available package managers are: <ul><li><code>npm</code>: NPM</li><li><code>yarn</code>: Yarn</li><li><code>pnpm</code>: PNPM</li></ul></li><li><code>--no-git</code>: If you don&#39;t want to initialize a git repository, you can use this option.</li><li><code>--no-install</code>: If you don&#39;t want to install the dependencies, you can use this option.</li><li><code>-h</code> or <code>--help</code>: To show the help message for this command.</li></ul><h3 id="generate-alias-g" tabindex="-1"><a class="header-anchor" href="#generate-alias-g" aria-hidden="true">#</a> Generate (alias: g)</h3><p>The <code>generate</code> command is used to generate new plugins, controllers, and middlewares and apps you can use it by running the following command:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>djs-mvc generate <span class="token operator">&lt;</span>type<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>name<span class="token operator">&gt;</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span>
<span class="token comment"># or using the alias</span>
djs-mvc g <span class="token operator">&lt;</span>type<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>name<span class="token operator">&gt;</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <code>type</code> argument is the type of the file you want to generate, the available types are:</p><ul><li><code>plugin</code> or <code>p</code>: To generate a new plugin.</li><li><code>controller</code> or <code>c</code>: To generate a new controller.</li><li><code>middleware</code> or <code>m</code>: To generate a new middleware.</li><li><code>app</code> or <code>a</code>: To generate a new app.</li></ul><p>All files will be generated in the <code>src</code> under the corresponding directory for the type (ex: <code>src/plugins</code> for plugins).</p><h4 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> Options</h4><p>The <code>name</code> argument is the name of the file, and the <code>options</code> are the options for the file, the available options are:</p><ul><li><code>--directory</code> or <code>-d</code>: The directory to generate the file in, this is usefull if you want to group controllers, middlewares, or plugins in a directory.</li><li><code>--app &lt;app&gt;</code>: The app to generate the file in, this is usefull if you want to generate a controller or a middleware in a specific app.</li><li><code>-h</code> or <code>--help</code>: To show the help message for this command.</li></ul><h3 id="app" tabindex="-1"><a class="header-anchor" href="#app" aria-hidden="true">#</a> App</h3><p>When your bot code grows, it can become painful to have a single router and to store all your controllers in the same directory, that&#39;s why Discord.js MVC comes with the concept of apps, an app is a directory that contains a grouped set of controllers, middlewares, and plugins, based on logic, for example, you can have an app for the moderation commands, and another app for the music commands, and another app for the fun commands, and so on. For more information for advanced usage, check the <a href="/guide/advanced-usage">advanced usage</a> page.</p>`,25),i=[t];function c(l,d){return a(),n("div",null,i)}const p=e(s,[["render",c],["__file","cli.html.vue"]]);export{p as default};
